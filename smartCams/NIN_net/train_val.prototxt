name: "nin_imagenet"
layer {
    name: "data"
    type: "ImageData"
    top: "data"
    top: "label"
    include {
        phase: TRAIN
    }
    transform_param {
        mirror: true
        crop_size: 227
        #mean_file: "../warped_data/mean_image_all.binaryproto"
    }
    image_data_param {
        source: "../VOC_cropped_warped_train_small.txt"
        batch_size: 64
    }
}
layer {
    name: "data"
    type: "ImageData"
    top: "data"
    top: "label"
    include {
        phase: TEST
    }
    transform_param {
        mirror: false
        crop_size: 227
        #mean_file: "../warped_data/mean_image_all.binaryproto"
    }
    image_data_param {
        source: "../VOC_cropped_warped_test_small.txt"
        batch_size: 64
    }
}
layer {
  bottom: "data"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  param {
        lr_mult: 1
        decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
    }
convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "relu0"
  type: RELU
}
layer {
  bottom: "conv1"
  top: "cccp1"
  name: "cccp1"
  type: "Convolution"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
convolution_param {
    num_output: 96
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp1"
  top: "cccp1"
  name: "relu1"
  type: "ReLU"
}
layer {
  bottom: "cccp1"
  top: "cccp2"
  name: "cccp2"
  type: "Convolution"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
convolution_param {
    num_output: 96
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp2"
  top: "cccp2"
  name: "relu2"
type: "ReLU"
}
layer {
  bottom: "cccp2"
  top: "pool0"
  name: "pool0"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer{
  bottom: "pool0"
  top: "conv2"
  name: "conv2"
  type: "Convolution"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer{
  bottom: "conv2"
  top: "conv2"
  name: "relu3"
  type: "ReLU"
}
layer{
  bottom: "conv2"
  top: "cccp3"
  name: "cccp3"
  type: "Convolution"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
decay_mult: 0
}
convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer{
  bottom: "cccp3"
  top: "cccp3"
  name: "relu5"
  type: RELU
}
layers{
  bottom: "cccp3"
  top: "cccp4"
  name: "cccp4"
  type: "Convolution"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  bottom: "cccp4"
  top: "cccp4"
  name: "relu6"
  type: RELU
}
layers {
  bottom: "cccp4"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layers {
  bottom: "pool2"
  top: "conv3"
  name: "conv3"
  type: "Convolution"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3"
  top: "conv3"
  name: "relu7"
  type: "ReLU"
}
layer {
  bottom: "conv3"
  top: "cccp5"
  name: "cccp5"
  type: "Convoluion"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
convolution_param {
    num_output: 384
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "cccp5"
  top: "cccp5"
  name: "relu8"
  type: RELU
}
layer {
  bottom: "cccp5"
  top: "cccp6"
  name: "cccp6"
  type: "Convolution"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
convolution_param {
    num_output: 384
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer{
  bottom: "cccp6"
  top: "cccp6"
  name: "relu9"
  type: "ReLU"
}
layer{
  bottom: "cccp6"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer{
  bottom: "pool3"
  top: "pool3"
  name: "drop"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer{
  bottom: "pool3"
  top: "conv4"
  name: "conv4-1024"
  type: "Convolution"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
convolution_param {
    num_output: 1024
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer{
  bottom: "conv4"
  top: "conv4"
  name: "relu10"
  type: "ReLU"
}
layer{
  bottom: "conv4"
  top: "cccp7"
  name: "cccp7-1024"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
   }
   param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer{
  bottom: "cccp7"
  top: "cccp7"
  name: "relu11"
  type: "ReLU"
}
layer{
  bottom: "cccp7"
  top: "cccp8"
  name: "cccp8-1024"
  type: "Convolution"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
convolution_param {
    num_output: 1000
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer{
  bottom: "cccp8"
  top: "cccp8"
  name: "relu12"
  type: RELU
}
layer{
    name: "fc8_VOC"
    type: "InnerProduct"
    bottom: "cccp8"
    top: "fc8_VOC"
    param {
        lr_mult: 10
        decay_mult: 1
    }
    param {
        lr_mult: 20
        decay_mult: 0
    }
    inner_product_param {
        num_output: 5
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer{
    name: "accuracy"
    type: "Accuracy"
    bottom: "fc8_VOC"
    bottom: "label"
    top: "accuracy"
    include {
        phase: TEST
    }
}
layer{
    name: "loss"
    type: "SoftmaxWithLoss"
    bottom: "fc8_VOC"
    bottom: "label"
    top: "loss"
}
